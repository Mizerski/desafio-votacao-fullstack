spring:
  application:
    name: backend
  
  # Configurações de timezone para Jackson (JSON)
  jackson:
    time-zone: America/Sao_Paulo
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSSSS
    serialization:
      write-dates-as-timestamps: false
  
  # Configuração do banco de dados
  datasource:
    url: jdbc:postgresql://localhost:5433/backend_postgres?serverTimezone=America/Sao_Paulo
    username: backend_user
    password: backend123
    driver-class-name: org.postgresql.Driver
    # Configurações de timezone específicas do PostgreSQL
    hikari:
      connection-init-sql: SET TIME ZONE 'America/Sao_Paulo'
  
  # Configuração do JPA
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          # Define o timezone para conexões JDBC
          time_zone: America/Sao_Paulo
    defer-datasource-initialization: false
  
  # Configuração do Flyway
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
  
# Configurações JWT
jwt:
  secret: ${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
  expiration: ${JWT_EXPIRATION:86400000} # 24 horas em millisegundos
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 dias em millisegundos

# Configurações de logging
logging:
  level:
    com.mizerski.backend: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Configurações do servidor
server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

# Configurações do Swagger/OpenAPI
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    show-actuator: true

# Configurações do Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Configurações de segurança
security:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
    allowed-headers: "*"
    allow-credentials: true